
##############################################################################################################
## Logging
##############################################################################################################

logging.level.org.springframework=INFO
logging.level.io.github.batchservices=INFO
logging.file=logs/filetransformer.log
springboot.logfile=logs/springboot_log.log
log4j.logger.org.springframework.jdbc.core=INFO


##############################################################################################################
## DataSource Configuration
##############################################################################################################

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://localhost:3306/batchExampleDB?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username = root
spring.datasource.password = password123
spring.datasource.platform=mysql
spring.datasource.initialization-mode=always
spring.datasource.driverClassName=com.mysql.jdbc.Driver

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create-drop

## My experiments -End


spring.datasource.tomcat.max-active=10
spring.datasource.tomcat.max-idle=10
spring.datasource.tomcat.min-idle=0
spring.datasource.tomcat.initial-size=0
spring.datasource.tomcat.remove-abandoned=true
spring.datasource.tomcat.remove-abandoned-timeout=180
spring.datasource.tomcat.log-abandoned=true
spring.datasource.tomcat.min-evictable-idle-time-millis=180000
spring.datasource.tomcat.jmx-enabled=true
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.test-on-borrow=false
spring.datasource.tomcat.test-on-connect=true
spring.datasource.tomcat.validation-query=select 1
spring.datasource.tomcat.validation-interval=20000
spring.datasource.tomcat.jdbc-interceptors=org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer(trace=true);org.apache.tomcat.jdbc.pool.interceptor.StatementCache(prepared=true,callable=false,max=100)
spring.datasource.tomcat.time-between-eviction-runs-millis=20000
##############################################################################################################
## Debugging Section
##############################################################################################################
skip_file_eligibility_checks=true

##==================================================================================
## Inbound File Poller
##==================================================================================

##--------------------------------------------------------------------##
## number of threads to concurrently consume messages
##--------------------------------------------------------------------##
inbound.file.poller.thread.pool.size=4

##--------------------------------------------------------------------##
## number of milliseconds between poll intervals
##--------------------------------------------------------------------##
inbound.file.poller.fixed.delay=5000

##--------------------------------------------------------------------##
## maximum number of messages to make available to the thread pool on
## each poll
##--------------------------------------------------------------------##
inbound.file.poller.max.messages.per.poll=5

##--------------------------------------------------------------------##
## File name pattern. Files that don't match this pattern will be
## ignored
##--------------------------------------------------------------------##
inbound.filename.regex = (^[a-zA-Z0-9_]*$)

inbound.zipfilename.regex = (^[a-zA-Z0-9_]+(.(?i)(zip))$)

##--------------------------------------------------------------------##
## Directory path to look for new files
##--------------------------------------------------------------------##
inbound.files.path=/Users/sravan.vedala/Root/Dev/gcp_experiments/DATA/read
##--------------------------------------------------------------------##
## Directory path to place files for Generic to pick up for processing
##--------------------------------------------------------------------##
inbound.processing.path=/Users/sravan.vedala/Root/Dev/gcp_experiments/DATA/process
inbound.workdir.path=/Users/sravan.vedala/Root/Dev/gcp_experiments/DATA/temp

##--------------------------------------------------------------------##
## Directory path to place files that fail processing
##--------------------------------------------------------------------##
inbound.failed.path=/Users/sravan.vedala/Root/Dev/gcp_experiments/DATA/failed

##--------------------------------------------------------------------##
## Batch Properties
##--------------------------------------------------------------------##
spring.batch.job.enabled=true
spring.batch.initialize-schema=always

##--------------------------------------------------------------------##
## JPA Properties
##--------------------------------------------------------------------##
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.type=trace

##--------------------------------------------------------------------##
## Health Check using Spring
##--------------------------------------------------------------------##

management.security.enabled=true
management.endpoints.enabled-by-default=false
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
management.endpoint.loggers.enabled=true
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/nft

endpoints.health.sensitive=false 
info.build.version=@version@
server.port=8282